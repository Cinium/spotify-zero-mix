{"version":3,"sources":["auth/auth.js","components/Callback.js","components/Login.js","utils/spotifyApi.js","components/Playlists.js","components/App.js","reportWebVitals.js","index.js"],"names":["Error","Callback","navigate","useNavigate","hash","a","values","substring","split","token","forEach","el","key","value","localStorage","setItem","JSON","stringify","useEffect","getParamsFromUrl","window","location","Login","SCOPES_STRING","join","onClick","SpotifyApi","base_url","this","getItem","parse","getTokenFromLocal","fetch","method","headers","Authorization","token_type","access_token","res","json","items","playlist_id","user","user_id","body","name","description","public","uris","position","spotifyApi","Playlists","useState","dailyMixes","setDailyMixes","tracks","setTracks","setToken","setUser","newPlaylist","setNewPlaylist","zeroMix","setZeroMix","isZeroMixCreated","setIsZeroMixCreated","getPlaylists","playlists","existingMix","find","item","filterPlaylists","allTracks","playlist","getPlaylistItems","id","concat","getUserInfo","userInfo","undefined","createPlaylist","slice","length","currentArr","splice","track","push","uri","addItemsToPlayList","shuffle","console","log","snapshot_id","array","randomIndex","currentIndex","Math","floor","random","filter","imagesArr","images","imageUrl","url","Object","keys","constructor","getDailies","getTracks","fillNewPlaylist","App","basename","process","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88e9b6fb.chunk.js","sourcesContent":["/* eslint-disable no-restricted-globals */\r\nfunction randomBytes(size) {\r\n\treturn crypto.getRandomValues(new Uint8Array(size))\r\n  }\r\n  \r\n  /**\r\n   * @param {Uint8Array} bytes\r\n   */\r\n  function base64url(bytes) {\r\n\treturn window.btoa(String.fromCharCode(...bytes))\r\n\t  .replace(/=/g, '')\r\n\t  .replace(/\\+/g, '-')\r\n\t  .replace(/\\//g, '_')\r\n  }\r\n  \r\n  /**\r\n   * https://tools.ietf.org/html/rfc7636#section-4.2\r\n   * @param {string} code_verifier\r\n   */\r\n  async function generateCodeChallenge(code_verifier) {\r\n\tconst codeVerifierBytes = new TextEncoder().encode(code_verifier)\r\n\tconst hashBuffer = await crypto.subtle.digest('SHA-256', codeVerifierBytes)\r\n\treturn base64url(new Uint8Array(hashBuffer))\r\n  }\r\n  \r\n  /**\r\n   * @param {RequestInfo} input\r\n   * @param {RequestInit} [init]\r\n   */\r\n  export async function fetchJSON(input, init) {\r\n\tconst response = await fetch(input, init)\r\n\tconst body = await response.json()\r\n\tif (!response.ok) {\r\n\t  throw new ErrorResponse(response, body)\r\n\t}\r\n\treturn body\r\n  }\r\n  \r\n  class ErrorResponse extends Error {\r\n\t/**\r\n\t * @param {Response} response\r\n\t * @param {any} body\r\n\t */\r\n\tconstructor(response, body) {\r\n\t  super(response.statusText)\r\n\t  this.status = response.status\r\n\t  this.body = body\r\n\t}\r\n  }\r\n  \r\n  export async function beginLogin() {\r\n\t// https://tools.ietf.org/html/rfc7636#section-4.1\r\n\tconst code_verifier = base64url(randomBytes(96))\r\n\tconst state = base64url(randomBytes(96))\r\n  \r\n\tconst params = new URLSearchParams({\r\n\t  client_id: '6f24e1aa19004f7cab42054a136c6efb',\r\n\t  response_type: 'code',\r\n\t  redirect_uri: `http://localhost:3000/callback`,\r\n\t  code_challenge_method: 'S256',\r\n\t  code_challenge: await generateCodeChallenge(code_verifier),\r\n\t  state: state,\r\n\t  scope: 'playlist-read-private',\r\n\t})\r\n  \r\n\tsessionStorage.setItem('code_verifier', code_verifier)\r\n\tsessionStorage.setItem('state', state)\r\n  \r\n\tlocation.href = `https://accounts.spotify.com/authorize?${params}`\r\n  }\r\n  \r\n  export async function completeLogin() {\r\n\tconst code_verifier = sessionStorage.getItem('code_verifier')\r\n\tconst state = sessionStorage.getItem('state')\r\n  \r\n\tconst params = new URLSearchParams(location.search)\r\n  \r\n\tif (params.has('error')) {\r\n\t  throw new Error(params.get('error'))\r\n\t} else if (!params.has('state')) {\r\n\t  throw new Error('State missing from response')\r\n\t} else if (params.get('state') !== state) {\r\n\t  throw new Error('State mismatch')\r\n\t} else if (!params.has('code')) {\r\n\t  throw new Error('Code missing from response')\r\n\t}\r\n  \r\n\tawait createAccessToken({\r\n\t  grant_type: 'authorization_code',\r\n\t  code: params.get('code'),\r\n\t  redirect_uri: `${location.origin}/callback`,\r\n\t  code_verifier: code_verifier,\r\n\t})\r\n  }\r\n  \r\n  export function logout() {\r\n\tlocalStorage.removeItem('tokenSet')\r\n  }\r\n  \r\n  /**\r\n   * @param {RequestInfo} input\r\n   */\r\n  export async function fetchWithToken(input) {\r\n\tconst accessToken = await getAccessToken()\r\n  \r\n\tif (!accessToken) {\r\n\t  throw new ErrorResponse(new Response(undefined, { status: 401 }), {})\r\n\t}\r\n  \r\n\treturn fetchJSON(input, {\r\n\t  headers: { Authorization: `Bearer ${accessToken}`,  },\r\n\t})\r\n  }\r\n  \r\n  /**\r\n   * @param {Record<string, string>} params\r\n   * @returns {Promise<string>}\r\n   */\r\n  async function createAccessToken(params) {\r\n\tconst response = await fetchJSON('https://accounts.spotify.com/api/token', {\r\n\t  method: 'POST',\r\n\t  body: new URLSearchParams({\r\n\t\tclient_id: '6f24e1aa19004f7cab42054a136c6efb',\r\n\t\t...params,\r\n\t  }),\r\n\t})\r\n\r\n\tconst accessToken = response.access_token\r\n\tconst expires_at = Date.now() + 1000 * response.expires_in\r\n  \r\n\tlocalStorage.setItem('tokenSet', JSON.stringify({ ...response, expires_at }))\r\n  \r\n\treturn accessToken\r\n  }\r\n  \r\n  /**\r\n   * @returns {Promise<string>}\r\n   */\r\n  export async function getAccessToken() {\r\n\tlet tokenSet = JSON.parse(localStorage.getItem('tokenSet'))\r\n  \r\n\tif (!tokenSet) return\r\n  \r\n\tif (tokenSet.expires_at < Date.now()) {\r\n\t  tokenSet = await createAccessToken({\r\n\t\tgrant_type: 'refresh_token',\r\n\t\trefresh_token: tokenSet.refresh_token,\r\n\t  })\r\n\t}\r\n  \r\n\treturn tokenSet.access_token\r\n  }","import { completeLogin } from '../auth/auth';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { useEffect } from 'react';\r\n\r\nfunction Callback() {\r\n\tconst navigate = useNavigate();\r\n\r\n\t// useEffect(() => {\r\n\t// \tcompleteLogin()\r\n\t// \t\t.then(() => {\r\n\t// \t\t\tnavigate('/playlists');\r\n\t// \t\t})\r\n\t// \t\t.catch(error => {\r\n\t// \t\t\tconsole.error(error);\r\n\t// \t\t\tnavigate('/');\r\n\t// \t\t});\r\n\t// }, []);\r\n\r\n\tasync function getParamsFromUrl(hash) {\r\n\t\tconst values = hash.substring(1).split('&')\r\n\t\tlet token = {};\r\n\t\tvalues.forEach(el => {\r\n\t\t\tconst [ key, value ] = el.split('=');\r\n\t\t\ttoken[key] = value\r\n\t\t})\r\n\t\tlocalStorage.setItem('token', JSON.stringify(token))\r\n\t\tnavigate('/playlists');\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetParamsFromUrl(window.location.hash);\r\n\t\t\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<main>\r\n\t\t\t\t<h1 >\r\n\t\t\t\t\tLogging you in...\r\n\t\t\t\t</h1>\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Callback;","import { completeLogin } from '../auth/auth';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { useEffect } from 'react';\r\nimport { beginLogin } from '../auth/auth';\r\n\r\nfunction Login() {\r\n\tconst CLIENT_ID = '6f24e1aa19004f7cab42054a136c6efb';\r\n\t// const REDIRECT_URI = `http://localhost:3000/callback`;\r\n\tconst REDIRECT_URI = `https://cinium.github.io/spotify-zero-mix/callback`;\r\n\tconst AUTHORIZE_ENDPOINT = 'https://accounts.spotify.com/authorize';\r\n\tconst SCOPES = ['playlist-read-private', 'playlist-modify-private'];\r\n\r\n\tconst SCOPES_STRING = SCOPES.join('%20');\r\n\r\n\tfunction handleLogin() {\r\n\t\twindow.location = `${AUTHORIZE_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&scope=${SCOPES_STRING}&response_type=token&show_dialog=false`;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<main>\r\n\t\t\t<h1>Log in!</h1>\r\n\t\t\t<button onClick={handleLogin}>Login</button>\r\n\t\t</main>\r\n\t);\r\n}\r\n\r\nexport default Login;\r\n","class SpotifyApi {\r\n\tconstructor(base_url) {\r\n\t\tthis.base_url = base_url;\r\n\t}\r\n\r\n\tgetTokenFromLocal() {\r\n\t\tlet token;\r\n\t\tif (localStorage.getItem('token')) {\r\n\t\t\ttoken = JSON.parse(localStorage.getItem('token'));\r\n\t\t\treturn token;\r\n\t\t}\r\n\t}\r\n\r\n\tasync getPlaylists() {\r\n\t\tconst token = await this.getTokenFromLocal();\r\n\r\n\t\tconst res = await fetch(`${this.base_url}/v1/me/playlists`, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `${token.token_type} ${token.access_token}`,\r\n\t\t\t},\r\n\t\t});\r\n\t\tconst json = await res.json();\r\n\t\tconst items = await json.items;\r\n\t\treturn items;\r\n\t}\r\n\r\n\tasync getPlaylistItems(playlist_id) {\r\n\t\tconst token = this.getTokenFromLocal();\r\n\r\n\t\tconst res = await fetch(\r\n\t\t\t`${this.base_url}/v1/playlists/${playlist_id}/tracks`,\r\n\t\t\t{\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `${token.token_type} ${token.access_token}`,\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tconst json = await res.json();\r\n\t\tconst items = await json.items;\r\n\t\treturn items;\r\n\t}\r\n\r\n\tasync getUserInfo() {\r\n\t\tconst token = this.getTokenFromLocal();\r\n\r\n\t\tconst res = await fetch(`${this.base_url}/v1/me`, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `${token.token_type} ${token.access_token}`,\r\n\t\t\t},\r\n\t\t});\r\n\t\tconst user = await res.json();\r\n\t\treturn user;\r\n\t}\r\n\r\n\tasync createPlaylist(user_id) {\r\n\t\tconst token = this.getTokenFromLocal();\r\n\r\n\t\tconst res = await fetch(`${this.base_url}/v1/users/${user_id}/playlists`, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `${token.token_type} ${token.access_token}`,\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tname: 'Микс дня #0',\r\n\t\t\t\tdescription: 'All in one daily mix',\r\n\t\t\t\tpublic: false,\r\n\t\t\t}),\r\n\t\t});\r\n\t\tconst json = res.json();\r\n\t\treturn json;\r\n\t}\r\n\r\n\tasync addItemsToPlayList(playlist_id, uris) {\r\n\t\tconst token = this.getTokenFromLocal();\r\n\r\n\t\tconst res = await fetch(\r\n\t\t\t`${this.base_url}/v1/playlists/${playlist_id}/tracks`,\r\n\t\t\t{\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `${token.token_type} ${token.access_token}`,\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\turis,\r\n\t\t\t\t\tposition: 0,\r\n\t\t\t\t}),\r\n\t\t\t}\r\n\t\t);\r\n\t\tconst json = res.json();\r\n\t\treturn json;\r\n\t}\r\n}\r\n\r\nconst spotifyApi = new SpotifyApi('https://api.spotify.com');\r\nexport default spotifyApi;\r\n","import { useEffect, useState } from 'react';\r\nimport spotifyApi from '../utils/spotifyApi';\r\nimport Player from './Player/Player';\r\n\r\nexport default function Playlists() {\r\n\tconst [dailyMixes, setDailyMixes] = useState([]);\r\n\tconst [tracks, setTracks] = useState([]);\r\n\tconst [token, setToken] = useState({});\r\n\tconst [user, setUser] = useState({});\r\n\tconst [newPlaylist, setNewPlaylist] = useState({});\r\n\tconst [zeroMix, setZeroMix] = useState(null);\r\n\tconst [isZeroMixCreated, setIsZeroMixCreated] = useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetToken(spotifyApi.getTokenFromLocal());\r\n\t\t// getUserInfo();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (Object.keys(user).length !== 0 && user.constructor === Object)\r\n\t\t\tgetDailies();\r\n\t}, [user]);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetTracks();\r\n\t}, [dailyMixes]);\r\n\r\n\tuseEffect(() => {\r\n\t\tcreatePlaylist();\r\n\t}, [tracks]);\r\n\r\n\tuseEffect(() => {\r\n\t\tfillNewPlaylist();\r\n\t}, [newPlaylist]);\r\n\r\n\tasync function getDailies() {\r\n\t\tconst playlists = await spotifyApi.getPlaylists();\r\n\t\tlet existingMix = playlists.find(item => item.name === 'Микс дня #0');\r\n\t\tsetZeroMix(existingMix);\r\n\t\tsetDailyMixes(filterPlaylists(playlists));\r\n\t}\r\n\r\n\tasync function getTracks() {\r\n\t\tlet allTracks = [];\r\n\t\tfor (const playlist of dailyMixes) {\r\n\t\t\tconst items = await spotifyApi.getPlaylistItems(playlist.id);\r\n\t\t\tallTracks = allTracks.concat(items);\r\n\t\t}\r\n\t\tsetTracks(allTracks);\r\n\t}\r\n\r\n\tasync function getUserInfo() {\r\n\t\tconst userInfo = await spotifyApi.getUserInfo();\r\n\t\tsetUser(userInfo);\r\n\t}\r\n\r\n\tasync function createPlaylist() {\r\n\t\tif (zeroMix === undefined) {\r\n\t\t\tconst playlist = await spotifyApi.createPlaylist(user.id);\r\n\t\t\tsetNewPlaylist(playlist);\r\n\t\t} else {\r\n\t\t\tsetNewPlaylist(zeroMix);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function fillNewPlaylist() {\r\n\t\tlet allTracks = tracks.slice();\r\n\t\tlet currentArr;\r\n\t\twhile (allTracks.length > 0) {\r\n\t\t\tlet uris = [];\r\n\t\t\tcurrentArr = allTracks.splice(0, 100);\r\n\t\t\tfor (const track of currentArr) {\r\n\r\n\t\t\t\turis.push(track.track.uri);\r\n\t\t\t}\r\n\t\t\tconst res = await spotifyApi.addItemsToPlayList(newPlaylist.id, shuffle(uris));\r\n\t\t\tconsole.log(res);\r\n\t\t\tif(res.snapshot_id) {\r\n\t\t\t\tsetIsZeroMixCreated(true)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction shuffle(array) {\r\n\t\tlet currentIndex = array.length,\r\n\t\t\trandomIndex;\r\n\r\n\t\twhile (currentIndex !== 0) {\r\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\r\n\t\t\tcurrentIndex--;\r\n\r\n\t\t\t[array[currentIndex], array[randomIndex]] = [\r\n\t\t\t\tarray[randomIndex],\r\n\t\t\t\tarray[currentIndex],\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\t}\r\n\r\n\tfunction filterPlaylists(items) {\r\n\t\tconst dailyMixes = items.filter(playlist => {\r\n\t\t\tconst imagesArr = playlist.images[0];\r\n\t\t\tif (!imagesArr) return false;\r\n\t\t\tconst imageUrl = imagesArr.url;\r\n\t\t\tif (imageUrl === undefined) return false;\r\n\t\t\treturn imageUrl.substring(8, 16) === 'dailymix';\r\n\t\t});\r\n\t\treturn dailyMixes;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button onClick={getUserInfo}>Create list</button>\r\n\t\t\t{isZeroMixCreated && (\r\n\t\t\t\t<p>Playlist created!</p>\r\n\t\t\t)}\r\n\r\n\t\t\t{token &&\r\n\t\t\t\t// <Player />\r\n\t\t\t\t'nah'}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import './App.css';\nimport Callback from '../components/Callback';\nimport Login from '../components/Login';\nimport Playlists from '../components/Playlists'\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nfunction App() {\n\treturn (\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t\t<Routes>\n\t\t\t\t\t<Route exact path=\"/\" element={<Login />} />\n\t\t\t\t\t<Route path=\"/callback/\" element={<Callback />} />\n\t\t\t\t\t<Route path=\"/playlists\" element={<Playlists />} />\n\t\t\t\t</Routes>\n\t\t\t{/* </div> */}\n\t\t</BrowserRouter>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}