{"version":3,"sources":["utils/constants.js","auth/auth.js","utils/spotifyApi.js","redux/types.js","components/Login/Login.js","redux/actions/userActions.js","redux/actions/appActions.js","redux/actions/playlistsActions.js","components/Spinner/Spinner.js","components/Playlists/Playlists.js","components/Navbar/Navbar.js","components/Header/Header.js","components/App.js","reportWebVitals.js","utils/history.js","redux/reducers/userReducer.js","redux/reducers/appReducer.js","redux/reducers/playlistsReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["SCOPES_STRING","join","auth","window","location","hash","values","substring","split","token","created","Date","forEach","el","key","value","localStorage","setItem","JSON","stringify","parse","getItem","creationDate","Math","abs","getTime","SpotifyApi","base_url","this","a","getTokenFromLocal","fetch","method","headers","Authorization","token_type","access_token","res","json","items","playlist_id","offset","user","user_id","body","name","description","public","uris","position","tracks","spotifyApi","SET_CURRENT_USER","IS_LOADING","DAILY_MIXES","ZERO_MIX","TRACKS","NEW_DAILY_MIX","Login","navigate","useNavigate","dispatch","useDispatch","useEffect","getTokenDataFromUrl","getUserInfo","type","payload","console","log","className","onClick","login","setIsLoading","boolean","setDailyMixes","dailies","setTracksFromDailies","Spinner","Playlists","useSelector","state","isLoading","app","getDailies","getPlaylists","playlists","filteredPlaylists","filterPlaylists","clearPlaylist","getPlaylistItems","playlistItems","total","length","moreItems","deleteTracks","item","uri","track","splice","deleteItemsFromPlaylist","getTracks","dailyTracks","playlist","id","concat","createPlaylist","fillPlaylist","currentArr","push","addItemsToPlayList","shuffle","array","randomIndex","currentIndex","floor","random","filter","includes","checkIfTokenExpired","existingZeroMix","find","disabled","Navbar","to","style","isActive","fontWeight","backgroundColor","padding","Header","images","src","large","alt","display_name","slice","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","history","createBrowserHistory","initialState","userReducer","action","appReducer","playlistsReducer","dailyMixes","zeroMix","newDailyMix","rootReducer","combineReducers","router","connectRouter","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62337259.chunk.js","sourcesContent":["export const CLIENT_ID = '6f24e1aa19004f7cab42054a136c6efb';\r\n\r\n// export const REDIRECT_URI = `http://localhost:3000`;\r\nexport const REDIRECT_URI = `https://cinium.github.io/spotify-zero-mix`;\r\n\r\nexport const AUTHORIZE_ENDPOINT = 'https://accounts.spotify.com/authorize';\r\nexport const SCOPES = ['playlist-read-private', 'playlist-modify-private', 'playlist-modify-public'];\r\nexport const SCOPES_STRING = SCOPES.join('%20');","import {\r\n\tAUTHORIZE_ENDPOINT,\r\n\tCLIENT_ID,\r\n\tREDIRECT_URI,\r\n\tSCOPES_STRING,\r\n} from '../utils/constants';\r\n\r\nclass Auth {\r\n\tlogin() {\r\n\t\twindow.location = `${AUTHORIZE_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&scope=${SCOPES_STRING}&response_type=token&show_dialog=true`;\r\n\t}\r\n\r\n\tgetTokenDataFromUrl(hash) {\r\n\t\tconst values = hash.substring(1).split('&')\r\n\t\tlet token = {\r\n\t\t\tcreated: new Date()\r\n\t\t};\r\n\t\tvalues.forEach(el => {\r\n\t\t\tconst [ key, value ] = el.split('=');\r\n\t\t\ttoken[key] = value\r\n\t\t})\r\n\t\tlocalStorage.setItem('token', JSON.stringify(token))\r\n\t\t\r\n\t}\r\n\r\n\tcheckIfTokenExpired() {\r\n\t\tconst token = JSON.parse(localStorage.getItem('token'));\r\n\t\tconst creationDate = new Date(token.created);\r\n\r\n\t\treturn (\r\n\t\t\tMath.abs((new Date().getTime() - creationDate.getTime()) / 1000) > 3600\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst auth = new Auth();\r\nexport default auth;\r\n","class SpotifyApi {\r\n\tconstructor(base_url) {\r\n\t\tthis.base_url = base_url;\r\n\t}\r\n\r\n\tgetTokenFromLocal() {\r\n\t\tlet token;\r\n\t\tif (localStorage.getItem('token')) {\r\n\t\t\ttoken = JSON.parse(localStorage.getItem('token'));\r\n\t\t\treturn token;\r\n\t\t}\r\n\t}\r\n\r\n\tasync getPlaylists() {\r\n\t\tconst token = await this.getTokenFromLocal();\r\n\r\n\t\tconst res = await fetch(`${this.base_url}/v1/me/playlists`, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `${token.token_type} ${token.access_token}`,\r\n\t\t\t},\r\n\t\t});\r\n\t\tconst json = await res.json();\r\n\t\tconst items = await json.items;\r\n\t\treturn items;\r\n\t}\r\n\r\n\tasync getPlaylistItems(playlist_id, offset) {\r\n\t\tconst token = this.getTokenFromLocal();\r\n\r\n\t\tconst res = await fetch(\r\n\t\t\t`${this.base_url}/v1/playlists/${playlist_id}/tracks${\r\n\t\t\t\toffset ? `?offset=${offset}&limit=100` : ''\r\n\t\t\t}`,\r\n\t\t\t{\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `${token.token_type} ${token.access_token}`,\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tconst json = await res.json();\r\n\t\treturn json;\r\n\t}\r\n\r\n\tasync getUserInfo() {\r\n\t\tconst token = this.getTokenFromLocal();\r\n\r\n\t\tconst res = await fetch(`${this.base_url}/v1/me`, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `${token.token_type} ${token.access_token}`,\r\n\t\t\t},\r\n\t\t});\r\n\t\tconst user = await res.json();\r\n\t\treturn user;\r\n\t}\r\n\r\n\tasync createPlaylist(user_id) {\r\n\t\tconst token = this.getTokenFromLocal();\r\n\r\n\t\tconst res = await fetch(`${this.base_url}/v1/users/${user_id}/playlists`, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `${token.token_type} ${token.access_token}`,\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tname: 'Микс дня #0',\r\n\t\t\t\tdescription: 'All in one daily mix',\r\n\t\t\t\tpublic: false,\r\n\t\t\t}),\r\n\t\t});\r\n\t\tconst json = res.json();\r\n\t\treturn json;\r\n\t}\r\n\r\n\tasync addItemsToPlayList(playlist_id, uris) {\r\n\t\tconst token = this.getTokenFromLocal();\r\n\r\n\t\tconst res = await fetch(\r\n\t\t\t`${this.base_url}/v1/playlists/${playlist_id}/tracks`,\r\n\t\t\t{\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `${token.token_type} ${token.access_token}`,\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\turis,\r\n\t\t\t\t\tposition: 0,\r\n\t\t\t\t}),\r\n\t\t\t}\r\n\t\t);\r\n\t\tconst json = res.json();\r\n\t\treturn json;\r\n\t}\r\n\r\n\tasync deleteItemsFromPlaylist(playlist_id, tracks) {\r\n\t\tconst token = this.getTokenFromLocal();\r\n\r\n\t\tconst res = await fetch(\r\n\t\t\t`${this.base_url}/v1/playlists/${playlist_id}/tracks`,\r\n\t\t\t{\r\n\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `${token.token_type} ${token.access_token}`,\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\ttracks,\r\n\t\t\t\t}),\r\n\t\t\t}\r\n\t\t);\r\n\t\tconst json = res.json();\r\n\t\treturn json;\r\n\t}\r\n}\r\n\r\nconst spotifyApi = new SpotifyApi('https://api.spotify.com');\r\nexport default spotifyApi;\r\n","export const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\nexport const SET_TOKEN = 'SET_TOKEN';\r\nexport const IS_LOADING = 'IS_LOADING';\r\nexport const DAILY_MIXES = 'DAILY_MIXES';\r\nexport const ZERO_MIX = 'ZERO_MIX';\r\nexport const TRACKS = 'TRACKS';\r\nexport const NEW_DAILY_MIX = 'NEW_DAILY_MIX';","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport auth from '../../auth/auth';\r\nimport { fetchUserInfo } from '../../redux/actions/userActions';\r\n\r\nfunction Login() {\r\n\tconst navigate = useNavigate();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (window.location.hash && window.location.hash !== '#/playlists') {\r\n\t\t\tauth.getTokenDataFromUrl(window.location.hash);\r\n\t\t\tdispatch(fetchUserInfo());\r\n\t\t\tnavigate('/playlists');\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<main>\r\n\t\t\t<h2 className=\"title\">Войди в Spotify</h2>\r\n\t\t\t<button onClick={auth.login} className=\"button\">\r\n\t\t\t\tВойти\r\n\t\t\t</button>\r\n\t\t</main>\r\n\t);\r\n}\r\n\r\nexport default Login;\r\n","import spotifyApi from '../../utils/spotifyApi';\r\nimport { SET_CURRENT_USER, SET_TOKEN } from '../types';\r\n\r\nexport function fetchUserInfo() {\r\n\treturn async dispatch => {\r\n\t\ttry {\r\n\t\t\tconst res = await spotifyApi.getUserInfo();\r\n\t\t\tlocalStorage.setItem('user', JSON.stringify(res))\r\n\t\t\tdispatch({ type: SET_CURRENT_USER, payload: res });\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e)\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function setCurrentUser(user) {\r\n\treturn {\r\n\t\ttype: SET_CURRENT_USER,\r\n\t\tpayload: user,\r\n\t};\r\n}\r\n\r\nexport function setToken(token) {\r\n\treturn {\r\n\t\ttype: SET_TOKEN,\r\n\t\tpayload: token,\r\n\t};\r\n}\r\n","import { IS_LOADING } from \"../types\";\r\n\r\nexport function setIsLoading(boolean) {\r\n\treturn {\r\n\t\ttype: IS_LOADING,\r\n\t\tpayload: boolean\r\n\t}\r\n}","import spotifyApi from '../../utils/spotifyApi';\r\nimport { DAILY_MIXES, NEW_DAILY_MIX, TRACKS, ZERO_MIX } from '../types';\r\n\r\nexport function getDailies() {\r\n\treturn async dispatch => {\r\n\t\ttry {\r\n\t\t\tconst playlists = await spotifyApi.getPlaylists();\r\n\t\t\tconst existingZeroMix = playlists.find(\r\n\t\t\t\titem => item.name === 'Микс дня #0'\r\n\t\t\t);\r\n\t\t\tconst dailyMixes = playlists.filter(playlist => {\r\n\t\t\t\tconst imagesArr = playlist.images[0];\r\n\t\t\t\tif (!imagesArr) return false;\r\n\t\t\t\tconst imageUrl = imagesArr.url;\r\n\t\t\t\tif (imageUrl === undefined) return false;\r\n\t\t\t\treturn imageUrl.substring(8, 16) === 'dailymix';\r\n\t\t\t});\r\n\r\n\t\t\tdispatch({ type: ZERO_MIX, payload: existingZeroMix });\r\n\t\t\tdispatch({ type: DAILY_MIXES, payload: dailyMixes });\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function getTracks() {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst { dailyMixes } = getState().playlists;\r\n\t\tlet tracks = [];\r\n\t\tfor (const playlist of dailyMixes) {\r\n\t\t\tconst items = await spotifyApi.getPlaylistItems(playlist.id);\r\n\t\t\ttracks = tracks.concat(items);\r\n\t\t}\r\n\t\tdispatch({\r\n\t\t\ttype: TRACKS,\r\n\t\t\tpayload: tracks,\r\n\t\t});\r\n\t};\r\n}\r\n\r\nexport function createPlaylist() {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst { zeroMix } = getState().playlists;\r\n\t\tconst user = getState().user;\r\n\r\n\t\tif (zeroMix === undefined) {\r\n\t\t\tconst playlist = await spotifyApi.createPlaylist(user.id);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: NEW_DAILY_MIX,\r\n\t\t\t\tpayload: playlist,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: NEW_DAILY_MIX,\r\n\t\t\t\tpayload: zeroMix,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function setZeroMix(mix) {\r\n\treturn {\r\n\t\ttype: ZERO_MIX,\r\n\t\tpayload: mix,\r\n\t};\r\n}\r\n\r\nexport function setDailyMixes(dailies) {\r\n\treturn {\r\n\t\ttype: DAILY_MIXES,\r\n\t\tpayload: dailies,\r\n\t};\r\n}\r\n\r\nexport function setTracksFromDailies(tracks) {\r\n\treturn {\r\n\t\ttype: TRACKS,\r\n\t\tpayload: tracks,\r\n\t};\r\n}\r\n\r\nexport function setNewZeroMix(mix) {\r\n\treturn {\r\n\t\ttype: NEW_DAILY_MIX,\r\n\t\tpayload: mix,\r\n\t};\r\n}\r\n","import './Spinner.css'\r\n\r\nfunction Spinner() {\r\n\treturn (\r\n\t\t<div className=\"lds-ring\">\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Spinner;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport auth from '../../auth/auth';\r\nimport { setIsLoading } from '../../redux/actions/appActions';\r\nimport {\r\n\tsetDailyMixes,\r\n\tsetTracksFromDailies,\r\n} from '../../redux/actions/playlistsActions';\r\nimport spotifyApi from '../../utils/spotifyApi';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport './Playlists.css';\r\n\r\nexport default function Playlists() {\r\n\tconst user = useSelector(state => state.user);\r\n\tconst isLoading = useSelector(state => state.app.isLoading);\r\n\tconst dispatch = useDispatch();\r\n\r\n\t// useEffect(() => {\r\n\t// \tif (Object.keys(user).length !== 0 && user.constructor === Object)\r\n\t// \t\tgetDailies();\r\n\t// }, [user]);\r\n\r\n\t// useEffect(() => {\r\n\t// \tgetTracks();\r\n\t// }, [dailyMixes]);\r\n\r\n\t// useEffect(() => {\r\n\t// \tcreatePlaylist();\r\n\t// }, [tracks]);\r\n\r\n\t// useEffect(() => {\r\n\t// \tfillNewPlaylist(newDailyMix);\r\n\t// }, [newDailyMix]);\r\n\r\n\tasync function getDailies() {\r\n\t\tconst playlists = await spotifyApi.getPlaylists();\r\n\t\tconst filteredPlaylists = filterPlaylists(playlists);\r\n\t\tdispatch(setDailyMixes(filteredPlaylists));\r\n\t\treturn filteredPlaylists;\r\n\t}\r\n\r\n\tasync function clearPlaylist(playlist_id) {\r\n\t\tconst playlistItems = await spotifyApi.getPlaylistItems(playlist_id);\r\n\t\tlet items = [...playlistItems.items];\r\n\t\tif (playlistItems.total > playlistItems.items.length) {\r\n\t\t\tfor (let offset = 100; offset < playlistItems.total; offset += 100) {\r\n\t\t\t\tconst moreItems = await spotifyApi.getPlaylistItems(\r\n\t\t\t\t\tplaylist_id,\r\n\t\t\t\t\toffset\r\n\t\t\t\t);\r\n\t\t\t\titems = [...items, ...moreItems.items];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdeleteTracks(playlist_id, items);\r\n\t}\r\n\r\n\tasync function deleteTracks(playlist_id, items) {\r\n\t\tlet uris = [];\r\n\t\titems.forEach(item => {\r\n\t\t\turis = [\r\n\t\t\t\t...uris,\r\n\t\t\t\t{\r\n\t\t\t\t\turi: item.track.uri,\r\n\t\t\t\t},\r\n\t\t\t];\r\n\t\t});\r\n\r\n\t\twhile (uris.length > 0) {\r\n\t\t\tlet tracks = uris.splice(0, 100);\r\n\t\t\tawait spotifyApi.deleteItemsFromPlaylist(playlist_id, tracks);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function getTracks(playlists) {\r\n\t\tlet dailyTracks = [];\r\n\t\tfor (const playlist of playlists) {\r\n\t\t\tif (playlist.name !== 'Микс дня #0') {\r\n\t\t\t\tconst { items } = await spotifyApi.getPlaylistItems(playlist.id);\r\n\t\t\t\tdailyTracks = dailyTracks.concat(items);\r\n\t\t\t}\r\n\t\t}\r\n\t\tdispatch(setTracksFromDailies(dailyTracks));\r\n\t\treturn dailyTracks;\r\n\t}\r\n\r\n\tasync function createPlaylist() {\r\n\t\tconst playlist = await spotifyApi.createPlaylist(user.id);\r\n\t\treturn playlist;\r\n\t}\r\n\r\n\tasync function fillPlaylist(playlist, tracks) {\r\n\t\tlet currentArr;\r\n\r\n\t\twhile (tracks.length > 0) {\r\n\t\t\tlet uris = [];\r\n\t\t\tcurrentArr = tracks.splice(0, 100);\r\n\t\t\tfor (const track of currentArr) {\r\n\t\t\t\turis.push(track.track.uri);\r\n\t\t\t}\r\n\t\t\tconst res = await spotifyApi.addItemsToPlayList(\r\n\t\t\t\tplaylist.id,\r\n\t\t\t\tshuffle(uris)\r\n\t\t\t);\r\n\t\t\tconsole.log(res);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction shuffle(array) {\r\n\t\tlet currentIndex = array.length,\r\n\t\t\trandomIndex;\r\n\r\n\t\twhile (currentIndex !== 0) {\r\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\r\n\t\t\tcurrentIndex--;\r\n\r\n\t\t\t[array[currentIndex], array[randomIndex]] = [\r\n\t\t\t\tarray[randomIndex],\r\n\t\t\t\tarray[currentIndex],\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\t}\r\n\r\n\tfunction filterPlaylists(playlists) {\r\n\t\tconst dailyMixes = playlists.filter(playlist =>\r\n\t\t\tplaylist.name.includes('Микс дня')\r\n\t\t);\r\n\t\treturn dailyMixes;\r\n\t}\r\n\r\n\tfunction checkIfTokenExpired() {\r\n\t\tconst token = JSON.parse(localStorage.getItem('token'));\r\n\t\tconst creationDate = new Date(token.created);\r\n\r\n\t\treturn (\r\n\t\t\tMath.abs((new Date().getTime() - creationDate.getTime()) / 1000) > 3600\r\n\t\t);\r\n\t}\r\n\r\n\tasync function handleGenerate() {\r\n\t\tdispatch(setIsLoading(true));\r\n\t\tif (checkIfTokenExpired()) auth.login();\r\n\r\n\t\tconst playlists = await getDailies();\r\n\t\tconst tracks = await getTracks(playlists);\r\n\t\tconst existingZeroMix = playlists.find(item => item.name === 'Микс дня #0');\r\n\r\n\t\tif (existingZeroMix) {\r\n\t\t\tawait clearPlaylist(existingZeroMix.id);\r\n\t\t\tfillPlaylist(existingZeroMix, tracks);\r\n\t\t} else {\r\n\t\t\tconst newPlaylist = await createPlaylist();\r\n\t\t\tfillPlaylist(newPlaylist, tracks);\r\n\t\t}\r\n\r\n\t\tdispatch(setIsLoading(false));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"playlists\">\r\n\t\t\t<h2 className=\"title\">Время генерировать плейлист дня!</h2>\r\n\t\t\t<button\r\n\t\t\t\tonClick={handleGenerate}\r\n\t\t\t\tdisabled={isLoading ? true : false}\r\n\t\t\t\tclassName={`playlists__create-button button ${\r\n\t\t\t\t\tisLoading && 'button_disabled'\r\n\t\t\t\t}`}\r\n\t\t\t>\r\n\t\t\t\tСоздать плейлист\r\n\t\t\t</button>\r\n\t\t\t{isLoading && <Spinner />}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import { NavLink } from 'react-router-dom';\r\nimport './Navbar.css';\r\n\r\nfunction Navbar() {\r\n\treturn (\r\n\t\t<ul className=\"navbar\">\r\n\t\t\t<li className=\"navbar__item\">\r\n\t\t\t\t<NavLink\r\n\t\t\t\t\tto=\"/about\"\r\n\t\t\t\t\tclassName=\"navbar__link\"\r\n\t\t\t\t\tstyle={({ isActive }) => ({\r\n\t\t\t\t\t\tfontWeight: isActive ? '500' : '400',\r\n\t\t\t\t\t\tbackgroundColor: isActive ? '#D0BCFF' : '',\r\n\t\t\t\t\t\tpadding: isActive ? '3px 12px 6px' : ''\r\n\t\t\t\t\t})}\r\n\t\t\t\t>\r\n\t\t\t\t\tAbout\r\n\t\t\t\t</NavLink>\r\n\t\t\t</li>\r\n\t\t\t<li className=\"navbar__item\">\r\n\t\t\t\t<NavLink\r\n\t\t\t\t\tto=\"/\"\r\n\t\t\t\t\tclassName=\"navbar__link\"\r\n\t\t\t\t\tstyle={({ isActive }) => ({\r\n\t\t\t\t\t\tfontWeight: isActive ? '500' : '400',\r\n\t\t\t\t\t\tbackgroundColor: isActive ? '#D0BCFF' : '',\r\n\t\t\t\t\t\tpadding: isActive ? '3px 12px 6px' : ''\r\n\t\t\t\t\t})}\r\n\t\t\t\t>\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</NavLink>\r\n\t\t\t</li>\r\n\t\t\t<li className=\"navbar__item\">\r\n\t\t\t\t<NavLink\r\n\t\t\t\t\tto=\"/playlists\"\r\n\t\t\t\t\tclassName=\"navbar__link\"\r\n\t\t\t\t\tstyle={({ isActive }) => ({\r\n\t\t\t\t\t\tfontWeight: isActive ? '500' : '400',\r\n\t\t\t\t\t\tbackgroundColor: isActive ? '#D0BCFF' : '',\r\n\t\t\t\t\t\tpadding: isActive ? '3px 12px 6px' : ''\r\n\t\t\t\t\t})}\r\n\t\t\t\t>\r\n\t\t\t\t\tGenerate\r\n\t\t\t\t</NavLink>\r\n\t\t\t</li>\r\n\t\t\t\r\n\t\t</ul>\r\n\t);\r\n}\r\n\r\nexport default Navbar;\r\n","import { useSelector } from 'react-redux';\r\nimport './Header.css';\r\n\r\nfunction Header() {\r\n\tconst user = useSelector(state => state.user);\r\n\r\n\treturn (\r\n\t\t\t<header className=\"header\">\r\n\t\t\t\tSpotify Zero Mix\r\n\t\t\t\t{user?.images?.length !== 0 ? (\r\n\t\t\t\t<img src={user?.images?.large} className=\"header__user-pic\" style={{}} alt=\"user pic\" />\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"header__avatar\">{user?.display_name.slice(0,1)}</div>\r\n\t\t\t)}\r\n\t\t\t</header>\r\n\t);\r\n}\r\n\r\nexport default Header;","import './App.css';\nimport Login from './Login/Login';\nimport Playlists from './Playlists/Playlists';\nimport { Routes, Route } from 'react-router-dom';\nimport Navbar from './Navbar/Navbar';\nimport Header from './Header/Header';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Header />\n\t\t\t<Navbar />\n\t\t\t<Routes>\n\t\t\t\t<Route path=\"/\" element={<Login />} />\n\t\t\t\t<Route path=\"playlists\" element={<Playlists />} />\n\t\t\t</Routes>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","import { SET_CURRENT_USER } from \"../types\";\r\n\r\nlet user = JSON.parse(localStorage.getItem('user'));\r\nconst initialState = user ? user : {};\r\n\r\nfunction userReducer(state = initialState, action) {\r\n\tswitch(action.type) {\r\n\t\tcase SET_CURRENT_USER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuser: action.payload\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport default userReducer;","import { IS_LOADING } from \"../types\";\r\n\r\nconst initialState = {\r\n\tisLoading: false,\r\n}\r\n\r\nfunction appReducer(state = initialState, action) {\r\n\tswitch(action.type) {\r\n\t\tcase IS_LOADING:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: action.payload\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport default appReducer;","import { DAILY_MIXES, NEW_DAILY_MIX, ZERO_MIX } from '../types';\r\n\r\nfunction playlistsReducer(state = {}, action) {\r\n\tswitch (action.type) {\r\n\t\tcase DAILY_MIXES:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdailyMixes: action.payload,\r\n\t\t\t};\r\n\t\tcase ZERO_MIX:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tzeroMix: action.payload,\r\n\t\t\t};\r\n\t\tcase NEW_DAILY_MIX:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnewDailyMix: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default playlistsReducer;\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport { history } from '../../utils/history';\r\nimport userReducer from './userReducer';\r\nimport appReducer from './appReducer';\r\nimport playlistsReducer from './playlistsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    router: connectRouter(history),\r\n    user: userReducer,\r\n    app: appReducer,\r\n    playlists: playlistsReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\n\nimport rootReducer from './redux/reducers/rootReducer';\nimport { HashRouter } from 'react-router-dom';\n\nconst store = createStore(\n\trootReducer,\n\tcomposeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<HashRouter>\n\t\t\t<App />\n\t\t</HashRouter>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}