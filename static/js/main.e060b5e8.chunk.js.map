{"version":3,"sources":["utils/constants.js","auth/auth.js","components/Login/Login.js","redux/types.js","redux/actions/appActions.js","utils/spotifyApi.js","components/Spinner/Spinner.js","components/Playlists/Playlists.js","components/Navbar/Navbar.js","components/Avatar/Avatar.js","components/Header/Header.js","components/MobileNav/MobileNav.js","components/App.js","redux/actions/userActions.js","reportWebVitals.js","utils/history.js","redux/reducers/userReducer.js","redux/reducers/appReducer.js","redux/reducers/playlistsReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["REDIRECT_URI","window","location","origin","SCOPES_STRING","join","NON_REDIR_HASHES","auth","console","log","hash","values","substring","split","token","created","Date","forEach","el","key","value","localStorage","setItem","JSON","stringify","parse","getItem","creationDate","Math","abs","getTime","Login","className","onClick","login","SET_CURRENT_USER","IS_LOADING","DAILY_MIXES","ZERO_MIX","NEW_DAILY_MIX","IS_MOBILE","SUCCESS_MESSAGE","setIsLoading","boolean","type","payload","setIsMobile","setSuccessMessage","SpotifyApi","base_url","this","a","getTokenFromLocal","fetch","method","headers","Authorization","token_type","access_token","res","json","items","playlist_id","offset","user","user_id","body","name","description","public","uris","position","tracks","spotifyApi","Spinner","style","marginTop","Playlists","useSelector","state","isLoading","app","success","successMessage","dispatch","useDispatch","checkIfTokenExpired","getDailies","playlists","getTracks","existingZeroMix","find","item","clearPlaylist","id","fillPlaylist","createPlaylist","getPlaylists","filterPlaylists","dailyTracks","playlist","getPlaylistItems","concat","playlistItems","total","length","moreItems","deleteTracks","uri","track","splice","deleteItemsFromPlaylist","currentArr","push","addItemsToPlayList","shuffle","array","randomIndex","currentIndex","floor","random","filter","includes","color","fontSize","disabled","Navbar","to","isActive","Avatar","images","src","large","alt","display_name","slice","Header","MobileNav","App","navigate","useNavigate","isMobile","checkIfMobile","screen","width","useEffect","addEventListener","some","getTokenDataFromUrl","getUserInfo","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","history","createBrowserHistory","initialState","userReducer","action","appReducer","playlistsReducer","dailyMixes","zeroMix","newDailyMix","rootReducer","combineReducers","router","connectRouter","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"yYAGaA,EAAeC,OAAOC,SAASC,OAG/BC,EADS,CAAC,wBAAyB,0BAA2B,0BACvCC,KAAK,OAE5BC,EAAmB,CAAC,cAAe,KAAM,WC6BvCC,EADF,I,qFA5BZ,WACCC,QAAQC,IAAIT,GACZC,OAAOC,SAAP,UDNgC,yCCMhC,sBDVuB,mCCUvB,yBAA+EF,EAA/E,kBAAqGI,EAArG,2C,iCAGD,SAAoBM,GACnB,IAAMC,EAASD,EAAKE,UAAU,GAAGC,MAAM,KACnCC,EAAQ,CACXC,QAAS,IAAIC,MAEdL,EAAOM,SAAQ,SAAAC,GACd,MAAuBA,EAAGL,MAAM,KAAhC,mBAAQM,EAAR,KAAaC,EAAb,KACAN,EAAMK,GAAOC,KAEdC,aAAaC,QAAQ,QAASC,KAAKC,UAAUV,M,iCAI9C,WACC,IAAMA,EAAQS,KAAKE,MAAMJ,aAAaK,QAAQ,UACxCC,EAAe,IAAIX,KAAKF,EAAMC,SAEpC,OACCa,KAAKC,MAAK,IAAIb,MAAOc,UAAYH,EAAaG,WAAa,KAAQ,S,qBCjBvDC,MAXf,WACC,OACC,0BAASC,UAAU,QAAnB,UACC,oBAAIA,UAAU,QAAd,2DACA,wBAAQC,QAAS1B,EAAK2B,MAAOF,UAAU,SAAvC,gD,8CCPUG,EAAmB,mBAEnBC,EAAa,aACbC,EAAc,cACdC,EAAW,WAEXC,EAAgB,gBAChBC,EAAY,YACZC,EAAkB,kBCNxB,SAASC,EAAaC,GAC5B,MAAO,CACNC,KAAMR,EACNS,QAASF,GAIJ,SAASG,EAAYH,GAC3B,MAAO,CACNC,KAAMJ,EACNK,QAASF,GAIJ,SAASI,EAAkBJ,GACjC,MAAO,CACNC,KAAMH,EACNI,QAASF,G,ICnBLK,E,WACL,WAAYC,GAAW,oBACtBC,KAAKD,SAAWA,E,qDAGjB,WAEC,GAAI5B,aAAaK,QAAQ,SAExB,OADQH,KAAKE,MAAMJ,aAAaK,QAAQ,Y,iEAK1C,kCAAAyB,EAAA,sEACqBD,KAAKE,oBAD1B,cACOtC,EADP,gBAGmBuC,MAAM,GAAD,OAAIH,KAAKD,SAAT,oBAAqC,CAC3DK,OAAQ,MACRC,QAAS,CACRC,cAAc,GAAD,OAAK1C,EAAM2C,WAAX,YAAyB3C,EAAM4C,iBAN/C,cAGOC,EAHP,gBASoBA,EAAIC,OATxB,cASOA,EATP,iBAUqBA,EAAKC,MAV1B,eAUOA,EAVP,yBAWQA,GAXR,iD,2HAcA,WAAuBC,EAAaC,GAApC,mBAAAZ,EAAA,6DACOrC,EAAQoC,KAAKE,oBADpB,SAGmBC,MAAM,GAAD,OACnBH,KAAKD,SADc,yBACWa,EADX,kBAErBC,EAAM,kBAAcA,EAAd,cAAmC,IAE1C,CACCT,OAAQ,MACRC,QAAS,CACRC,cAAc,GAAD,OAAK1C,EAAM2C,WAAX,YAAyB3C,EAAM4C,iBAVhD,cAGOC,EAHP,gBAcoBA,EAAIC,OAdxB,cAcOA,EAdP,yBAeQA,GAfR,gD,yHAkBA,gCAAAT,EAAA,6DACOrC,EAAQoC,KAAKE,oBADpB,SAGmBC,MAAM,GAAD,OAAIH,KAAKD,SAAT,UAA2B,CACjDK,OAAQ,MACRC,QAAS,CACRC,cAAc,GAAD,OAAK1C,EAAM2C,WAAX,YAAyB3C,EAAM4C,iBAN/C,cAGOC,EAHP,gBASoBA,EAAIC,OATxB,cASOI,EATP,yBAUQA,GAVR,gD,yHAaA,WAAqBC,GAArB,mBAAAd,EAAA,6DACOrC,EAAQoC,KAAKE,oBADpB,SAGmBC,MAAM,GAAD,OAAIH,KAAKD,SAAT,qBAA8BgB,EAA9B,cAAmD,CACzEX,OAAQ,OACRC,QAAS,CACRC,cAAc,GAAD,OAAK1C,EAAM2C,WAAX,YAAyB3C,EAAM4C,cAC5C,eAAgB,oBAEjBQ,KAAM3C,KAAKC,UAAU,CACpB2C,KAAM,iDACNC,YAAa,uBACbC,QAAQ,MAZX,cAGOV,EAHP,OAeOC,EAAOD,EAAIC,OAflB,kBAgBQA,GAhBR,gD,8HAmBA,WAAyBE,EAAaQ,GAAtC,mBAAAnB,EAAA,6DACOrC,EAAQoC,KAAKE,oBADpB,SAGmBC,MAAM,GAAD,OACnBH,KAAKD,SADc,yBACWa,EADX,WAEtB,CACCR,OAAQ,OACRC,QAAS,CACRC,cAAc,GAAD,OAAK1C,EAAM2C,WAAX,YAAyB3C,EAAM4C,cAC5C,eAAgB,oBAEjBQ,KAAM3C,KAAKC,UAAU,CACpB8C,OACAC,SAAU,MAbd,cAGOZ,EAHP,OAiBOC,EAAOD,EAAIC,OAjBlB,kBAkBQA,GAlBR,gD,qIAqBA,WAA8BE,EAAaU,GAA3C,mBAAArB,EAAA,6DACOrC,EAAQoC,KAAKE,oBADpB,SAGmBC,MAAM,GAAD,OACnBH,KAAKD,SADc,yBACWa,EADX,WAEtB,CACCR,OAAQ,SACRC,QAAS,CACRC,cAAc,GAAD,OAAK1C,EAAM2C,WAAX,YAAyB3C,EAAM4C,cAC5C,eAAgB,oBAEjBQ,KAAM3C,KAAKC,UAAU,CACpBgD,aAZJ,cAGOb,EAHP,OAgBOC,EAAOD,EAAIC,OAhBlB,kBAiBQA,GAjBR,gD,gEAsBca,EADI,IAAIzB,EAAW,2B,MC1GnB0B,MAXf,WACC,OACC,sBAAK1C,UAAU,WAAW2C,MAAO,CAACC,UAAW,SAA7C,UACC,wBACA,wBACA,wBACA,4B,MCDY,SAASC,IACvB,IAAMb,EAAOc,uBAAY,SAAAC,GAAK,OAAIA,EAAMf,QAClCgB,EAAYF,uBAAY,SAAAC,GAAK,OAAIA,EAAME,IAAID,aAC3CE,EAAUJ,uBAAY,SAAAC,GAAK,OAAIA,EAAME,IAAIE,kBACzCC,EAAWC,wBAJkB,4CAMnC,gCAAAlC,EAAA,6DACKmC,KAAuB/E,EAAK2B,QAEhCkD,EAAS1C,GAAa,IAHvB,kBAK0B6C,IAL1B,cAKQC,EALR,gBAMuBC,EAAUD,GANjC,UAMQhB,EANR,SAOQkB,EAAkBF,EAAUG,MACjC,SAAAC,GAAI,MAAkB,mDAAdA,EAAKzB,SARhB,kCAYS0B,EAAcH,EAAgBI,IAZvC,QAaGC,EAAaL,EAAiBlB,GAbjC,yCAe6BwB,IAf7B,QAgBGD,EAhBH,OAgB6BvB,GAhB7B,QAmBEY,EAASrC,GAAkB,IAnB7B,kDAqBEvC,QAAQC,IAAR,MArBF,yBAuBE2E,EAAS1C,GAAa,IAvBxB,8EANmC,+BAiCpB6C,IAjCoB,2EAiCnC,4BAAApC,EAAA,+EAE0BsB,EAAWwB,eAFrC,cAEQT,EAFR,yBAGSU,EAAgBV,IAHzB,gCAKEhF,QAAQC,IAAR,MALF,0DAjCmC,+BA0CpBgF,EA1CoB,8EA0CnC,WAAyBD,GAAzB,yBAAArC,EAAA,+DAEMgD,EAAc,GAFpB,cAGyBX,GAHzB,4DAIyB,oDADZY,EAHb,SAIgBjC,KAJhB,kCAK4BM,EAAW4B,iBAAiBD,EAASN,IALjE,iBAKYjC,EALZ,EAKYA,MACRsC,EAAcA,EAAYG,OAAOzC,GANrC,wKASSsC,GATT,kCAWE3F,QAAQC,IAAR,MAXF,wEA1CmC,+BAyDpBoF,EAzDoB,8EAyDnC,WAA6B/B,GAA7B,qBAAAX,EAAA,+EAE8BsB,EAAW4B,iBAAiBvC,GAF1D,UAEQyC,EAFR,OAGM1C,EAHN,YAGkB0C,EAAc1C,SAC1B0C,EAAcC,MAAQD,EAAc1C,MAAM4C,QAJhD,iBAKY1C,EAAS,IALrB,YAK0BA,EAASwC,EAAcC,OALjD,kCAM4B/B,EAAW4B,iBAClCvC,EACAC,GARL,QAMU2C,EANV,OAUI7C,EAAK,sBAAOA,GAAP,YAAiB6C,EAAU7C,QAVpC,QAKwDE,GAAU,IALlE,uBAcE4C,EAAa7C,EAAaD,GAd5B,kDAgBErD,QAAQC,IAAR,MAhBF,2DAzDmC,+BA6EpBkG,EA7EoB,gFA6EnC,WAA4B7C,EAAaD,GAAzC,iBAAAV,EAAA,sDACKmB,EAAO,GACXT,EAAM5C,SAAQ,SAAA2E,GAAI,OAAKtB,EAAI,sBAAOA,GAAP,CAAa,CAAEsC,IAAKhB,EAAKiB,MAAMD,UAF3D,qBAKStC,EAAKmC,OAAS,GALvB,uBAMOjC,EAASF,EAAKwC,OAAO,EAAG,KAN/B,SAOSrC,EAAWsC,wBAAwBjD,EAAaU,GAPzD,+EAUEhE,QAAQC,IAAR,MAVF,2DA7EmC,+BA2FpBuF,IA3FoB,2EA2FnC,4BAAA7C,EAAA,+EAEyBsB,EAAWuB,eAAehC,EAAK8B,IAFxD,cAEQM,EAFR,yBAGSA,GAHT,gCAKE5F,QAAQC,IAAR,MALF,0DA3FmC,+BAoGpBsF,EApGoB,gFAoGnC,WAA4BK,EAAU5B,GAAtC,yBAAArB,EAAA,2EAISqB,EAAOiC,OAAS,GAJzB,iBAKOnC,EAAO,GACX0C,EAAaxC,EAAOsC,OAAO,EAAG,KANjC,cAOuBE,GAPvB,IAOG,2BAAWH,EAAqB,QAC/BvC,EAAK2C,KAAKJ,EAAMA,MAAMD,KAR1B,8CAUqBnC,EAAWyC,mBAC5Bd,EAASN,GACTqB,EAAQ7C,IAZZ,OAUSX,EAVT,OAcGnD,QAAQC,IAAIkD,GAdf,yEAiBEnD,QAAQC,IAAR,MAjBF,2DApGmC,sBAyHnC,SAAS0G,EAAQC,GAIhB,IAHA,IACCC,EADGC,EAAeF,EAAMX,OAGD,IAAjBa,GAAoB,CAC1BD,EAAczF,KAAK2F,MAAM3F,KAAK4F,SAAWF,GACzCA,IAF0B,MAIkB,CAC3CF,EAAMC,GACND,EAAME,IAFNF,EAAME,GAJmB,KAIJF,EAAMC,GAJF,KAU3B,OAAOD,EAGR,SAASlB,EAAgBV,GAIxB,OAHmBA,EAAUiC,QAAO,SAAArB,GAAQ,OAC3CA,EAASjC,KAAKuD,SAAS,kDAKzB,SAASpC,IACR,IAAMxE,EAAQS,KAAKE,MAAMJ,aAAaK,QAAQ,UACxCC,EAAe,IAAIX,KAAKF,EAAMC,SAEpC,OACCa,KAAKC,MAAK,IAAIb,MAAOc,UAAYH,EAAaG,WAAa,KAAQ,KAIrE,OACC,sBAAKE,UAAU,YAAf,UACC,oBAAIA,UAAU,yBAAd,0LAGCgD,GAAa,cAAC,EAAD,IACbE,GAAW,mBAAGP,MAAO,CAACgD,MAAO,UAAWC,SAAU,QAAvC,oGACZ,wBACC3F,QAlKgC,2CAmKhC4F,WAAU7C,EACVhD,UAAS,0CACRgD,GAAa,mBAJf,4G,wBChIY8C,MArCf,WACC,OACC,qBAAI9F,UAAU,SAAd,UACC,oBAAIA,UAAU,eAAd,SACC,cAAC,IAAD,CACC+F,GAAG,SACH/F,UAAW,kBACV,gBADU,EAAGgG,SACgB,uBAAyB,KAHxD,qBASD,oBAAIhG,UAAU,eAAd,SACC,cAAC,IAAD,CACC+F,GAAG,IACH/F,UAAW,kBACV,gBADU,EAAGgG,SACgB,uBAAyB,KAHxD,qBASD,oBAAIhG,UAAU,eAAd,SACC,cAAC,IAAD,CACC+F,GAAG,aACH/F,UAAW,kBACV,gBADU,EAAGgG,SACgB,uBAAyB,KAHxD,4B,MCPWC,MAjBf,WAAmB,IAAD,EACXjE,EAAOc,uBAAY,SAAAC,GAAK,OAAIA,EAAMf,KAAKA,QAE7C,OACC,qBAAKhC,UAAU,SAAf,SAC2B,KAArB,OAAJgC,QAAI,IAAJA,GAAA,UAAAA,EAAMkE,cAAN,eAAczB,QACd,qBACC0B,IAAKnE,EAAKkE,OAAOE,MACjBC,IAAI,aAGL,+BAAOrE,EAAKsE,aAAaC,MAAM,EAAG,Q,MCGvBC,MAbf,WACC,IAAMxE,EAAOc,uBAAY,SAAAC,GAAK,OAAIA,EAAMf,KAAKA,QAE7C,OACC,yBAAQhC,UAAU,SAAlB,8BAGM,OAAJgC,QAAI,IAAJA,OAAA,EAAAA,EAAMkE,SAAU,cAAC,EAAD,Q,MCgCLO,MAxCf,WACC,OACC,qBAAIzG,UAAU,YAAd,UACC,oBAAIA,UAAU,kBAAd,SACC,eAAC,IAAD,CACC+F,GAAG,SACH/F,UAAW,kBACV,mBADU,EAAGgG,SACmB,UAAY,KAH9C,UAMC,sBAAMhG,UAAU,iBAAhB,kBACA,mBAAGA,UAAU,mBAAb,wBAGF,oBAAIA,UAAU,kBAAd,SACC,eAAC,IAAD,CACC+F,GAAG,IACH/F,UAAW,kBACV,mBADU,EAAGgG,SACmB,UAAY,KAH9C,UAMC,sBAAMhG,UAAU,iBAAhB,mBACA,mBAAGA,UAAU,mBAAb,wBAGF,oBAAIA,UAAU,kBAAd,SACC,eAAC,IAAD,CACC+F,GAAG,aACH/F,UAAW,kBACV,mBADU,EAAGgG,SACmB,UAAY,KAH9C,UAMC,sBAAMhG,UAAU,iBAAhB,wBACA,mBAAGA,UAAU,mBAAb,+BCsBU0G,MA1Cf,WACC,IAAMC,EAAWC,wBACXxD,EAAWC,wBACXwD,EAAW/D,uBAAY,SAAAC,GAAK,OAAIA,EAAME,IAAI4D,YAchD,SAASC,IACJ7I,OAAO8I,OAAOC,OAAS,IAC1B5D,EAAStC,GAAY,IAErBsC,EAAStC,GAAY,IAIvB,OArBAtC,QAAQC,IAAIR,OAAOC,SAASC,QAE5B8I,qBAAU,WACTH,IACA7I,OAAOiJ,iBAAiB,SAAUJ,GAE7BxI,EAAiB6I,MAAK,SAAAzI,GAAI,OAAIT,OAAOC,SAASQ,OAASA,OAC3DH,EAAK6I,oBAAoBnJ,OAAOC,SAASQ,MACzC0E,ECxBF,uCAAO,WAAMA,GAAN,eAAAjC,EAAA,+EAEasB,EAAW4E,cAFxB,OAEC1F,EAFD,OAGLtC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUmC,IAC5CyB,EAAS,CAAExC,KAAMT,EAAkBU,QAASc,IAJvC,gDAMLnD,QAAQC,IAAR,MANK,yDAAP,uDDyBEkI,EAAS,iBAER,IAWF,sBAAK3G,UAAU,MAAf,UACC,cAAC,EAAD,KAEE6G,GAAY,cAAC,EAAD,IAEd,eAAC,SAAD,WACC,cAAC,QAAD,CAAOS,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,QAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,EAAD,SAGjCV,GAAY,cAAC,EAAD,QExCDW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uCCLDQ,EAAUC,c,OCAnBlG,EAAOzC,KAAKE,MAAMJ,aAAaK,QAAQ,SACrCyI,EAAenG,EAAO,CAAEA,QAAS,GAcxBoG,MAZf,WAAoD,IAA/BrF,EAA8B,uDAAtBoF,EAAcE,EAAQ,uCAClD,OAAOA,EAAOzH,OACRT,EACG,2BACH4C,GADJ,IAECf,KAAMqG,EAAOxH,UAGPkC,GCXJoF,EAAe,CACpBnF,WAAW,GAyBGsF,OAtBf,WAAmD,IAA/BvF,EAA8B,uDAAtBoF,EAAcE,EAAQ,uCACjD,OAAQA,EAAOzH,MACd,KAAKR,EACJ,OAAO,2BACH2C,GADJ,IAECC,UAAWqF,EAAOxH,UAEpB,KAAKL,EACJ,OAAO,2BACHuC,GADJ,IAEC8D,SAAUwB,EAAOxH,UAEnB,KAAKJ,EACJ,OAAO,2BACHsC,GADJ,IAECI,eAAgBkF,EAAOxH,UAEzB,QACC,OAAOkC,ICAKwF,OAtBf,WAA+C,IAArBxF,EAAoB,uDAAZ,GAAIsF,EAAQ,uCAC7C,OAAQA,EAAOzH,MACd,KAAKP,EACJ,OAAO,2BACH0C,GADJ,IAECyF,WAAYH,EAAOxH,UAErB,KAAKP,EACJ,OAAO,2BACHyC,GADJ,IAEC0F,QAASJ,EAAOxH,UAElB,KAAKN,EACJ,OAAO,2BACHwC,GADJ,IAEC2F,YAAaL,EAAOxH,UAEtB,QACC,OAAOkC,ICNK4F,GAPKC,0BAAgB,CAChCC,OAAQC,wBAAcb,GACtBjG,KAAMoG,EACNnF,IAAKqF,GACL9E,UAAW+E,KCDAQ,GALDC,sBACbL,GACAM,8BAAoBC,0BAAgBC,OCErCC,IAASC,OACR,cAAC,WAAD,CAAUN,MAAOA,GAAjB,SACC,cAAC,IAAD,UACC,cAAC,EAAD,QAGFO,SAASC,eAAe,SAGzB/B,M","file":"static/js/main.e060b5e8.chunk.js","sourcesContent":["export const CLIENT_ID = '6f24e1aa19004f7cab42054a136c6efb';\r\n// export const REDIRECT_URI = `http://localhost:3000`;\r\n// export const REDIRECT_URI = `https://cinium.github.io/spotify-zero-mix`;\r\nexport const REDIRECT_URI = window.location.origin;\r\nexport const AUTHORIZE_ENDPOINT = 'https://accounts.spotify.com/authorize';\r\nexport const SCOPES = ['playlist-read-private', 'playlist-modify-private', 'playlist-modify-public'];\r\nexport const SCOPES_STRING = SCOPES.join('%20');\r\n\r\nexport const NON_REDIR_HASHES = ['#/playlists', '#/', '#/about']","import {\r\n\tAUTHORIZE_ENDPOINT,\r\n\tCLIENT_ID,\r\n\tREDIRECT_URI,\r\n\tSCOPES_STRING,\r\n} from '../utils/constants';\r\n\r\nclass Auth {\r\n\tlogin() {\r\n\t\tconsole.log(REDIRECT_URI)\r\n\t\twindow.location = `${AUTHORIZE_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&scope=${SCOPES_STRING}&response_type=token&show_dialog=true`;\r\n\t}\r\n\r\n\tgetTokenDataFromUrl(hash) {\r\n\t\tconst values = hash.substring(1).split('&')\r\n\t\tlet token = {\r\n\t\t\tcreated: new Date()\r\n\t\t};\r\n\t\tvalues.forEach(el => {\r\n\t\t\tconst [ key, value ] = el.split('=');\r\n\t\t\ttoken[key] = value\r\n\t\t})\r\n\t\tlocalStorage.setItem('token', JSON.stringify(token))\r\n\t\t\r\n\t}\r\n\r\n\tcheckIfTokenExpired() {\r\n\t\tconst token = JSON.parse(localStorage.getItem('token'));\r\n\t\tconst creationDate = new Date(token.created);\r\n\r\n\t\treturn (\r\n\t\t\tMath.abs((new Date().getTime() - creationDate.getTime()) / 1000) > 3600\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst auth = new Auth();\r\nexport default auth;\r\n","import auth from '../../auth/auth';\r\nimport './Login.css'\r\n\r\nfunction Login() {\r\n\treturn (\r\n\t\t<section className=\"login\">\r\n\t\t\t<h2 className=\"title\">Войди в Spotify</h2>\r\n\t\t\t<button onClick={auth.login} className=\"button\">\r\n\t\t\t\tВойти\r\n\t\t\t</button>\r\n\t\t</section>\r\n\t);\r\n}\r\n\r\nexport default Login;\r\n","export const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\nexport const SET_TOKEN = 'SET_TOKEN';\r\nexport const IS_LOADING = 'IS_LOADING';\r\nexport const DAILY_MIXES = 'DAILY_MIXES';\r\nexport const ZERO_MIX = 'ZERO_MIX';\r\nexport const TRACKS = 'TRACKS';\r\nexport const NEW_DAILY_MIX = 'NEW_DAILY_MIX';\r\nexport const IS_MOBILE = 'IS_MOBILE';\r\nexport const SUCCESS_MESSAGE = 'SUCCESS_MESSAGE';","import { IS_LOADING, IS_MOBILE, SUCCESS_MESSAGE } from '../types';\r\n\r\nexport function setIsLoading(boolean) {\r\n\treturn {\r\n\t\ttype: IS_LOADING,\r\n\t\tpayload: boolean,\r\n\t};\r\n}\r\n\r\nexport function setIsMobile(boolean) {\r\n\treturn {\r\n\t\ttype: IS_MOBILE,\r\n\t\tpayload: boolean,\r\n\t};\r\n}\r\n\r\nexport function setSuccessMessage(boolean) {\r\n\treturn {\r\n\t\ttype: SUCCESS_MESSAGE,\r\n\t\tpayload: boolean\r\n\t}\r\n}\r\n","class SpotifyApi {\r\n\tconstructor(base_url) {\r\n\t\tthis.base_url = base_url;\r\n\t}\r\n\r\n\tgetTokenFromLocal() {\r\n\t\tlet token;\r\n\t\tif (localStorage.getItem('token')) {\r\n\t\t\ttoken = JSON.parse(localStorage.getItem('token'));\r\n\t\t\treturn token;\r\n\t\t}\r\n\t}\r\n\r\n\tasync getPlaylists() {\r\n\t\tconst token = await this.getTokenFromLocal();\r\n\r\n\t\tconst res = await fetch(`${this.base_url}/v1/me/playlists`, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `${token.token_type} ${token.access_token}`,\r\n\t\t\t},\r\n\t\t});\r\n\t\tconst json = await res.json();\r\n\t\tconst items = await json.items;\r\n\t\treturn items;\r\n\t}\r\n\r\n\tasync getPlaylistItems(playlist_id, offset) {\r\n\t\tconst token = this.getTokenFromLocal();\r\n\r\n\t\tconst res = await fetch(\r\n\t\t\t`${this.base_url}/v1/playlists/${playlist_id}/tracks${\r\n\t\t\t\toffset ? `?offset=${offset}&limit=100` : ''\r\n\t\t\t}`,\r\n\t\t\t{\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `${token.token_type} ${token.access_token}`,\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t\tconst json = await res.json();\r\n\t\treturn json;\r\n\t}\r\n\r\n\tasync getUserInfo() {\r\n\t\tconst token = this.getTokenFromLocal();\r\n\r\n\t\tconst res = await fetch(`${this.base_url}/v1/me`, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `${token.token_type} ${token.access_token}`,\r\n\t\t\t},\r\n\t\t});\r\n\t\tconst user = await res.json();\r\n\t\treturn user;\r\n\t}\r\n\r\n\tasync createPlaylist(user_id) {\r\n\t\tconst token = this.getTokenFromLocal();\r\n\r\n\t\tconst res = await fetch(`${this.base_url}/v1/users/${user_id}/playlists`, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `${token.token_type} ${token.access_token}`,\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tname: 'Микс дня #0',\r\n\t\t\t\tdescription: 'All in one daily mix',\r\n\t\t\t\tpublic: false,\r\n\t\t\t}),\r\n\t\t});\r\n\t\tconst json = res.json();\r\n\t\treturn json;\r\n\t}\r\n\r\n\tasync addItemsToPlayList(playlist_id, uris) {\r\n\t\tconst token = this.getTokenFromLocal();\r\n\r\n\t\tconst res = await fetch(\r\n\t\t\t`${this.base_url}/v1/playlists/${playlist_id}/tracks`,\r\n\t\t\t{\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `${token.token_type} ${token.access_token}`,\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\turis,\r\n\t\t\t\t\tposition: 0,\r\n\t\t\t\t}),\r\n\t\t\t}\r\n\t\t);\r\n\t\tconst json = res.json();\r\n\t\treturn json;\r\n\t}\r\n\r\n\tasync deleteItemsFromPlaylist(playlist_id, tracks) {\r\n\t\tconst token = this.getTokenFromLocal();\r\n\r\n\t\tconst res = await fetch(\r\n\t\t\t`${this.base_url}/v1/playlists/${playlist_id}/tracks`,\r\n\t\t\t{\r\n\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `${token.token_type} ${token.access_token}`,\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\ttracks,\r\n\t\t\t\t}),\r\n\t\t\t}\r\n\t\t);\r\n\t\tconst json = res.json();\r\n\t\treturn json;\r\n\t}\r\n}\r\n\r\nconst spotifyApi = new SpotifyApi('https://api.spotify.com');\r\nexport default spotifyApi;\r\n","import './Spinner.css'\r\n\r\nfunction Spinner() {\r\n\treturn (\r\n\t\t<div className=\"lds-ring\" style={{marginTop: '150px'}}>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Spinner;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport auth from '../../auth/auth';\r\nimport { setIsLoading, setSuccessMessage } from '../../redux/actions/appActions';\r\nimport spotifyApi from '../../utils/spotifyApi';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport './Playlists.css';\r\n\r\nexport default function Playlists() {\r\n\tconst user = useSelector(state => state.user);\r\n\tconst isLoading = useSelector(state => state.app.isLoading);\r\n\tconst success = useSelector(state => state.app.successMessage);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tasync function handleGenerate() {\r\n\t\tif (checkIfTokenExpired()) auth.login();\r\n\r\n\t\tdispatch(setIsLoading(true));\r\n\t\ttry {\r\n\t\t\tconst playlists = await getDailies();\r\n\t\t\tconst tracks = await getTracks(playlists);\r\n\t\t\tconst existingZeroMix = playlists.find(\r\n\t\t\t\titem => item.name === 'Микс дня #0'\r\n\t\t\t);\r\n\r\n\t\t\tif (existingZeroMix) {\r\n\t\t\t\tawait clearPlaylist(existingZeroMix.id);\r\n\t\t\t\tfillPlaylist(existingZeroMix, tracks);\r\n\t\t\t} else {\r\n\t\t\t\tconst newPlaylist = await createPlaylist();\r\n\t\t\t\tfillPlaylist(newPlaylist, tracks);\r\n\t\t\t}\r\n\r\n\t\t\tdispatch(setSuccessMessage(true))\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t} finally {\r\n\t\t\tdispatch(setIsLoading(false));\r\n\t\t}\r\n\t}\r\n\r\n\tasync function getDailies() {\r\n\t\ttry {\r\n\t\t\tconst playlists = await spotifyApi.getPlaylists();\r\n\t\t\treturn filterPlaylists(playlists);\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function getTracks(playlists) {\r\n\t\ttry {\r\n\t\t\tlet dailyTracks = [];\r\n\t\t\tfor (const playlist of playlists) {\r\n\t\t\t\tif (playlist.name !== 'Микс дня #0') {\r\n\t\t\t\t\tconst { items } = await spotifyApi.getPlaylistItems(playlist.id);\r\n\t\t\t\t\tdailyTracks = dailyTracks.concat(items);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn dailyTracks;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function clearPlaylist(playlist_id) {\r\n\t\ttry {\r\n\t\t\tconst playlistItems = await spotifyApi.getPlaylistItems(playlist_id);\r\n\t\t\tlet items = [...playlistItems.items];\r\n\t\t\tif (playlistItems.total > playlistItems.items.length) {\r\n\t\t\t\tfor (let offset = 100; offset < playlistItems.total; offset += 100) {\r\n\t\t\t\t\tconst moreItems = await spotifyApi.getPlaylistItems(\r\n\t\t\t\t\t\tplaylist_id,\r\n\t\t\t\t\t\toffset\r\n\t\t\t\t\t);\r\n\t\t\t\t\titems = [...items, ...moreItems.items];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdeleteTracks(playlist_id, items);\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function deleteTracks(playlist_id, items) {\r\n\t\tlet uris = [];\r\n\t\titems.forEach(item => (uris = [...uris, { uri: item.track.uri }]));\r\n\r\n\t\ttry {\r\n\t\t\twhile (uris.length > 0) {\r\n\t\t\t\tlet tracks = uris.splice(0, 100);\r\n\t\t\t\tawait spotifyApi.deleteItemsFromPlaylist(playlist_id, tracks);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function createPlaylist() {\r\n\t\ttry {\r\n\t\t\tconst playlist = await spotifyApi.createPlaylist(user.id);\r\n\t\t\treturn playlist;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function fillPlaylist(playlist, tracks) {\r\n\t\ttry {\r\n\t\t\tlet currentArr;\r\n\r\n\t\t\twhile (tracks.length > 0) {\r\n\t\t\t\tlet uris = [];\r\n\t\t\t\tcurrentArr = tracks.splice(0, 100);\r\n\t\t\t\tfor (const track of currentArr) {\r\n\t\t\t\t\turis.push(track.track.uri);\r\n\t\t\t\t}\r\n\t\t\t\tconst res = await spotifyApi.addItemsToPlayList(\r\n\t\t\t\t\tplaylist.id,\r\n\t\t\t\t\tshuffle(uris)\r\n\t\t\t\t);\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction shuffle(array) {\r\n\t\tlet currentIndex = array.length,\r\n\t\t\trandomIndex;\r\n\r\n\t\twhile (currentIndex !== 0) {\r\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\r\n\t\t\tcurrentIndex--;\r\n\r\n\t\t\t[array[currentIndex], array[randomIndex]] = [\r\n\t\t\t\tarray[randomIndex],\r\n\t\t\t\tarray[currentIndex],\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\t}\r\n\r\n\tfunction filterPlaylists(playlists) {\r\n\t\tconst dailyMixes = playlists.filter(playlist =>\r\n\t\t\tplaylist.name.includes('Микс дня')\r\n\t\t);\r\n\t\treturn dailyMixes;\r\n\t}\r\n\r\n\tfunction checkIfTokenExpired() {\r\n\t\tconst token = JSON.parse(localStorage.getItem('token'));\r\n\t\tconst creationDate = new Date(token.created);\r\n\r\n\t\treturn (\r\n\t\t\tMath.abs((new Date().getTime() - creationDate.getTime()) / 1000) > 3600\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"playlists\">\r\n\t\t\t<h2 className=\"playlists__title title\">\r\n\t\t\t\tВремя генерировать плейлист дня!\r\n\t\t\t</h2>\r\n\t\t\t{isLoading && <Spinner />}\r\n\t\t\t{success && <p style={{color: '#B3261E', fontSize: '20px'}} >Плейлист создан!</p>}\r\n\t\t\t<button\r\n\t\t\t\tonClick={handleGenerate}\r\n\t\t\t\tdisabled={isLoading ? true : false}\r\n\t\t\t\tclassName={`playlists__create-button button ${\r\n\t\t\t\t\tisLoading && 'button_disabled'\r\n\t\t\t\t}`}\r\n\t\t\t>\r\n\t\t\t\tСоздать плейлист\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import { NavLink } from 'react-router-dom';\r\nimport './Navbar.css';\r\n\r\nfunction Navbar() {\r\n\treturn (\r\n\t\t<ul className=\"navbar\">\r\n\t\t\t<li className=\"navbar__item\">\r\n\t\t\t\t<NavLink\r\n\t\t\t\t\tto=\"/about\"\r\n\t\t\t\t\tclassName={({ isActive }) =>\r\n\t\t\t\t\t\t'navbar__link' + (isActive ? ' navbar__link_active' : '')\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\tAbout\r\n\t\t\t\t</NavLink>\r\n\t\t\t</li>\r\n\t\t\t<li className=\"navbar__item\">\r\n\t\t\t\t<NavLink\r\n\t\t\t\t\tto=\"/\"\r\n\t\t\t\t\tclassName={({ isActive }) =>\r\n\t\t\t\t\t\t'navbar__link' + (isActive ? ' navbar__link_active' : '')\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</NavLink>\r\n\t\t\t</li>\r\n\t\t\t<li className=\"navbar__item\">\r\n\t\t\t\t<NavLink\r\n\t\t\t\t\tto=\"/playlists\"\r\n\t\t\t\t\tclassName={({ isActive }) =>\r\n\t\t\t\t\t\t'navbar__link' + (isActive ? ' navbar__link_active' : '')\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\tGenerate\r\n\t\t\t\t</NavLink>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t);\r\n}\r\n\r\nexport default Navbar;\r\n","import { useSelector } from 'react-redux';\r\nimport './Avatar.css';\r\n\r\nfunction Avatar() {\r\n\tconst user = useSelector(state => state.user.user);\r\n\r\n\treturn (\r\n\t\t<div className=\"avatar\">\r\n\t\t\t{user?.images?.length !== 0 ? (\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={user.images.large}\r\n\t\t\t\t\talt=\"user pic\"\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<span>{user.display_name.slice(0, 1)}</span>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Avatar;\r\n","import { useSelector } from 'react-redux';\r\nimport Avatar from '../Avatar/Avatar';\r\nimport './Header.css';\r\n\r\nfunction Header() {\r\n\tconst user = useSelector(state => state.user.user);\r\n\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\tSpotify Zero Mix\r\n\t\t\t{\r\n\t\t\t\tuser?.images && <Avatar />\r\n\t\t\t}\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","import { NavLink } from 'react-router-dom';\r\nimport './MobileNav.css';\r\n\r\nfunction MobileNav() {\r\n\treturn (\r\n\t\t<ul className=\"mobilenav\">\r\n\t\t\t<li className=\"mobilenav__item\">\r\n\t\t\t\t<NavLink\r\n\t\t\t\t\tto=\"/about\"\r\n\t\t\t\t\tclassName={({ isActive }) =>\r\n\t\t\t\t\t\t'mobilenav__link' + (isActive ? ' active' : '')\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span className=\"material-icons\">info</span>\r\n\t\t\t\t\t<p className=\"mobilenav__label\">About</p>\r\n\t\t\t\t</NavLink>\r\n\t\t\t</li>\r\n\t\t\t<li className=\"mobilenav__item\">\r\n\t\t\t\t<NavLink\r\n\t\t\t\t\tto=\"/\"\r\n\t\t\t\t\tclassName={({ isActive }) =>\r\n\t\t\t\t\t\t'mobilenav__link' + (isActive ? ' active' : '')\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span className=\"material-icons\">login</span>\r\n\t\t\t\t\t<p className=\"mobilenav__label\">Login</p>\r\n\t\t\t\t</NavLink>\r\n\t\t\t</li>\r\n\t\t\t<li className=\"mobilenav__item\">\r\n\t\t\t\t<NavLink\r\n\t\t\t\t\tto=\"/playlists\"\r\n\t\t\t\t\tclassName={({ isActive }) =>\r\n\t\t\t\t\t\t'mobilenav__link' + (isActive ? ' active' : '')\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span className=\"material-icons\">add_circle</span>\r\n\t\t\t\t\t<p className=\"mobilenav__label\">Generate</p>\r\n\t\t\t\t</NavLink>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t);\r\n}\r\n\r\nexport default MobileNav;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport './App.css';\nimport Login from './Login/Login';\nimport Playlists from './Playlists/Playlists';\nimport { Routes, Route } from 'react-router-dom';\nimport Navbar from './Navbar/Navbar';\nimport Header from './Header/Header';\nimport { useEffect } from 'react';\nimport auth from '../auth/auth';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchUserInfo } from '../redux/actions/userActions';\nimport { NON_REDIR_HASHES } from '../utils/constants';\nimport { setIsMobile } from '../redux/actions/appActions';\nimport MobileNav from './MobileNav/MobileNav';\n\nfunction App() {\n\tconst navigate = useNavigate();\n\tconst dispatch = useDispatch();\n\tconst isMobile = useSelector(state => state.app.isMobile)\n\tconsole.log(window.location.origin)\n\n\tuseEffect(() => {\n\t\tcheckIfMobile();\n\t\twindow.addEventListener('resize', checkIfMobile);\n\n\t\tif (!NON_REDIR_HASHES.some(hash => window.location.hash === hash)) {\n\t\t\tauth.getTokenDataFromUrl(window.location.hash);\n\t\t\tdispatch(fetchUserInfo());\n\t\t\tnavigate('/playlists');\n\t\t}\n\t}, []);\n\n\tfunction checkIfMobile() {\n\t\tif (window.screen.width <= 424) {\n\t\t\tdispatch(setIsMobile(true))\n\t\t} else {\n\t\t\tdispatch(setIsMobile(false))\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Header />\n\t\t\t{\n\t\t\t\t!isMobile && <Navbar />\n\t\t\t}\n\t\t\t<Routes>\n\t\t\t\t<Route path=\"/\" element={<Login />} />\n\t\t\t\t<Route path=\"playlists\" element={<Playlists />} />\n\t\t\t</Routes>\n\t\t\t{\n\t\t\t\tisMobile && <MobileNav />\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import spotifyApi from '../../utils/spotifyApi';\r\nimport { SET_CURRENT_USER, SET_TOKEN } from '../types';\r\n\r\nexport function fetchUserInfo() {\r\n\treturn async dispatch => {\r\n\t\ttry {\r\n\t\t\tconst res = await spotifyApi.getUserInfo();\r\n\t\t\tlocalStorage.setItem('user', JSON.stringify(res))\r\n\t\t\tdispatch({ type: SET_CURRENT_USER, payload: res });\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e)\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function setCurrentUser(user) {\r\n\treturn {\r\n\t\ttype: SET_CURRENT_USER,\r\n\t\tpayload: user,\r\n\t};\r\n}\r\n\r\nexport function setToken(token) {\r\n\treturn {\r\n\t\ttype: SET_TOKEN,\r\n\t\tpayload: token,\r\n\t};\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","import { SET_CURRENT_USER } from \"../types\";\r\n\r\nlet user = JSON.parse(localStorage.getItem('user'));\r\nconst initialState = user ? { user } : {};\r\n\r\nfunction userReducer(state = initialState, action) {\r\n\tswitch(action.type) {\r\n\t\tcase SET_CURRENT_USER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuser: action.payload\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport default userReducer;","import { IS_LOADING, IS_MOBILE, SUCCESS_MESSAGE } from '../types';\r\n\r\nconst initialState = {\r\n\tisLoading: false,\r\n};\r\n\r\nfunction appReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase IS_LOADING:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: action.payload,\r\n\t\t\t};\r\n\t\tcase IS_MOBILE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisMobile: action.payload,\r\n\t\t\t};\r\n\t\tcase SUCCESS_MESSAGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsuccessMessage: action.payload\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default appReducer;\r\n","import { DAILY_MIXES, NEW_DAILY_MIX, ZERO_MIX } from '../types';\r\n\r\nfunction playlistsReducer(state = {}, action) {\r\n\tswitch (action.type) {\r\n\t\tcase DAILY_MIXES:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdailyMixes: action.payload,\r\n\t\t\t};\r\n\t\tcase ZERO_MIX:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tzeroMix: action.payload,\r\n\t\t\t};\r\n\t\tcase NEW_DAILY_MIX:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnewDailyMix: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default playlistsReducer;\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport { history } from '../../utils/history';\r\nimport userReducer from './userReducer';\r\nimport appReducer from './appReducer';\r\nimport playlistsReducer from './playlistsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    router: connectRouter(history),\r\n    user: userReducer,\r\n    app: appReducer,\r\n    playlists: playlistsReducer\r\n});\r\n\r\nexport default rootReducer;","import { applyMiddleware, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\tcomposeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport store from './redux/store';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<HashRouter>\n\t\t\t<App />\n\t\t</HashRouter>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}